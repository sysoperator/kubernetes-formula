{%- from tplroot ~ "/map.jinja" import etcd with context -%}
{%- from tplroot ~ "/vars.jinja" import
    etcd_data_dir,
    etcd_ca_cert_path,
    etcd_ssl_cert_path, etcd_ssl_key_path,
    etcd_bin_path
with context -%}
{%- from "flannel/vars.jinja" import
    flannel_etcd_api
-%}
{%- from "common/vars.jinja" import
    node_host, node_ip4
-%}

[Unit]
Description=etcd key-value store
Documentation=https://github.com/coreos/etcd
After=network-online.target
Wants=network-online.target

[Service]
User=etcd
Type=notify
ExecStart={{ etcd_bin_path }} \
{%- if flannel_etcd_api <= 2 %}
    --enable-v2 \
{%- endif %}
    --name {{ node_host }} \
    --advertise-client-urls https://{{ node_ip4 }}:2379 \
    --data-dir /var/local/etcd \
    --listen-client-urls https://{{ node_ip4 }}:2379 \
    --trusted-ca-file {{ etcd_ca_cert_path }} \
    --client-cert-auth \
    --cert-file {{ etcd_ssl_cert_path }} \
    --key-file {{ etcd_ssl_key_path }} \
    --listen-peer-urls https://{{ node_ip4 }}:2380 \
    --peer-trusted-ca-file {{ etcd_ca_cert_path }} \
    --peer-client-cert-auth \
    --peer-cert-file {{ etcd_ssl_cert_path }} \
    --peer-key-file {{ etcd_ssl_key_path }} \
    --initial-cluster-token {{ etcd.cluster.name }} \
    --initial-cluster {% for server, addrs in salt['mine.get']('roles:kube-master', 'kube_master_ip_addrs', tgt_type='grain')|dictsort() -%}
        {{ server.split('.')[0] }}=https://{{ addrs[0] }}:2380{% if not loop.last %},{% endif %}
  {%- endfor %} \
    --initial-advertise-peer-urls https://{{ node_ip4 }}:2380 \
    --initial-cluster-state new
Restart=on-failure
RestartSec=10
LimitNOFILE=infinity

[Install]
WantedBy=multi-user.target
