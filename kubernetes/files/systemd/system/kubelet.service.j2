{%- from tplroot ~ "/map.jinja" import kubernetes with context -%}
{%- set component = 'kubelet' -%}
{%- set component_bin_path = kubernetes.install_dir + '/kubelet' -%}
{%- from tplroot ~ "/vars.jinja" import
    k8s,
    cluster_dns_cluster_domain, cluster_dns_nameservers,
    node_role,
    kubelet_cgroup_driver,
    kubernetes_feature_gates,
    kubernetes_ca_cert_path,
    component_ssl_cert_path, component_ssl_key_path,
    component_kubeconfig
with context -%}
{%- from "cni/vars.jinja" import
    cni_etc_dir
-%}
{%- from "common/vars.jinja" import
    node_ip4
-%}

[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/kubernetes/kubernetes
{%- if node_role == 'master' %}
After=kube-apiserver.service kube-proxy.service
{% else %}
After={%- if k8s.single_node_cluster != true %}flannel.service {% endif -%} haproxy.service kube-proxy.service
{% endif -%}

[Service]
User=root
ExecStart={{ component_bin_path }} \
    --kubeconfig={{ component_kubeconfig }} \
    --address={{ node_ip4 }} \
    --port=10250 \
    --read-only-port=0 \
    --node-ip={{ node_ip4 }} \
    --anonymous-auth=false \
    --authorization-mode=Webhook \
    --authentication-token-webhook=true \
    --tls-cert-file={{ component_ssl_cert_path }} \
    --tls-private-key-file={{ component_ssl_key_path }} \
    --client-ca-file={{ kubernetes_ca_cert_path }} \
{%- if salt['pkg.version_cmp'](kubernetes.source_version, 'v1.22.0') < 0 %}
    --chaos-chance=0.0 \
{%- endif %}
{%- if salt['pkg.version_cmp'](kubernetes.source_version, 'v1.24.0') < 0 %}
    --container-runtime=docker \
{%- else %}
    --container-runtime-endpoint=unix:///run/containerd/containerd.sock \
{%- endif %}
{%- if node_role == 'master' %}
    --node-labels="type=controller" \
    --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \
{%- endif %}
{%- if node_role == 'node' %}
    --enable-controller-attach-detach=false \
{%- endif %}
{%- if salt['pkg.version_cmp'](kubernetes.source_version, 'v1.24.0') < 0 %}
    --network-plugin=cni \
    --cni-conf-dir={{ cni_etc_dir }} \
{%- endif %}
{%- if kubernetes_feature_gates|length > 0 %}
    --feature-gates={% for feature in kubernetes_feature_gates -%}
        {{ feature }}{% if not loop.last %},{% endif %}
{%- endfor %} \
{%- endif %}
{#-
  Issue:  https://github.com/kubernetes/kubernetes/issues/90259
  Commit: https://github.com/kubernetes/kubernetes/commit/8bed088224fb38b41255b37e59a1701caefa171b
#}
    --make-iptables-util-chains=false \
    --cpu-cfs-quota=false \
    --cluster-domain={{ cluster_dns_cluster_domain }} \
    --cluster-dns={{ cluster_dns_nameservers|join(',') }} \
{%- if salt['grains.get']('os_family') == 'RedHat' %}
    --cgroup-driver=systemd \
{%- elif kubelet_cgroup_driver != '' %}
    --cgroup-driver={{ kubelet_cgroup_driver }} \
{%- endif %}
{%- if k8s.log_debug %}
    --v=4
{%- else %}
    --v=2
{%- endif %}{% if salt['pkg.version_cmp'](kubernetes.source_version, 'v1.26.0') < 0 %} \
    --logtostderr=true
{%- endif %}
Restart=on-failure
RestartSec=5
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
Alias=kube-kubelet.service
