{% from "kubernetes/map.jinja" import kubernetes with context %}

{% set component = 'kube-controller-manager' %}
{% set component_bin_path = kubernetes.install_dir + '/controller-manager' %}

{% from "kubernetes/vars.jinja" import
    kubernetes_apiserver_url,
    kubernetes_etc_dir, kubernetes_ssl_dir,
    kubernetes_ca_cert_path, kubernetes_ca_key_path,
    kubernetes_sa_key_path,
    kubernetes_cert_issuers,
    kubernetes_cert_issuer_duration,
    component_kubeconfig
with context %}

[Unit]
Description=Kubernetes Controller Manager
Documentation=https://github.com/kubernetes/kubernetes
After=kube-apiserver.service

[Service]
User=root
ExecStart={{ component_bin_path }} \
    --service-account-private-key-file={{ kubernetes_sa_key_path }} \
    --root-ca-file={{ kubernetes_ca_cert_path }} \
{%- if kubernetes.k8s.enable_cert_issuer %}
    --cluster-signing-kube-apiserver-client-cert-file={{ kubernetes_ca_cert_path }} \
    --cluster-signing-kube-apiserver-client-key-file={{ kubernetes_ca_key_path }} \
    --cluster-signing-duration={{ kubernetes_cert_issuer_duration }} \
  {%- if kubernetes_cert_issuers|length > 0 %}
    {%- for issuer in kubernetes_cert_issuers %}
    --cluster-signing-{{ issuer }}-cert-file={{ kubernetes_ssl_dir }}/{{ issuer }}-ca.crt \
    --cluster-signing-{{ issuer }}-key-file={{ kubernetes_ssl_dir }}/{{ issuer }}-ca.key \
    {%- endfor %}
  {%- endif %}
{%- endif %}
    --use-service-account-credentials \
    --kubeconfig={{ component_kubeconfig }} \
    --enable-hostpath-provisioner=false \
    --pvclaimbinder-sync-period=15s \
    --master={{ kubernetes_apiserver_url }} \
    --logtostderr=true
Restart=on-failure
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
