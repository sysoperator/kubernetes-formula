{%- from tplroot ~ "/map.jinja" import kubernetes with context -%}
{%- from tplroot ~ "/vars.jinja" import
    apiserver_port, apiserver_hostport
with context -%}

global
	log /dev/log local0
	log /dev/log local1 notice
	chroot /var/lib/haproxy
{%- if salt['grains.get']('os_family') == 'Debian' %}
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
{%- endif %}
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000

frontend kube-apiserver
	mode tcp
	option tcplog
	bind {{ apiserver_hostport }}
	default_backend kube-apiserver

backend kube-apiserver
	mode tcp
	balance roundrobin
	option tcp-check
	option log-health-checks
{%- for server, addrs in salt['mine.get']('roles:kube-master', 'kube_master_ip_addrs', tgt_type='grain')|dictsort() %}
	server {{ server.split('.')[0] }} {{ addrs[0] }}:{{ apiserver_port }} weight 1 maxconn 4096 check inter 5s fall 5 rise 3
{%- endfor %}
